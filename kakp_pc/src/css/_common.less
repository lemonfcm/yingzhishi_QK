#tpl #NIE-copyRight {
    min-width: 1200px;
    padding: 20px 0 40px; 
    color: #fff;
    background: #000;

    a {
        color: #fff;
        text-decoration: none;
    }
}

.posr {
    position: relative;
}

.posa {
    position: absolute;
}

.posf {
    position: fixed;
}

.hide {
    display: none;
}

.clearfix {}

.clearfix:after,
.clearfix:before {
    content: '.';
    display: block;
    height: 0;
    visibility: hidden;
    overflow: hidden;
}

.clearfix:after {
    clear: both;
}

.clearfix {
    *zoom: 1;
}


.fnOpacity (@opacity:0) {
    @tempOpacity: @opacity * 100;
    -webkit-opacity: @opacity;
    -moz-opacity: @opacity;
    opacity: @opacity;
    filter : alpha(opacity=@tempOpacity);
}

.fnTranslate3d (@x, @y:0, @z: 0) {
    -webkit-transform: translate3d(@x, @y, @z);
    -moz-transform: translate3d(@x, @y, @z);
    -ms-transform: translate3d(@x, @y, @z);
    -o-transform: translate3d(@x, @y, @z);
    transform: translate3d(@x, @y, @z);
}

.fnTransition (@prop) {
    transition: @prop;
    -webkit-transition: @prop;
    -moz-transition: @prop;
    -o-transition: @prop;
}

.fnAnimation (@param) {
    -moz-animation: @param;
    -webkit-animation: @param;
    -o-animation: @param;
    -ms-animation: @param;
    animation: @param;
}

.fnTransform (@prop) {
    transform: @prop;
    -ms-transform: @prop;
    -webkit-transform: @prop;
    -moz-transform: @prop;
    -o-transform: @prop;
}


.fnKeyframes (@name, @frames) {
    @-webkit-keyframes @name {
         @frames();
    }
    @-moz-keyframes @name {
         @frames();
    }
    @-ms-keyframes @name {
         @frames();
    }
    @-o-keyframes @name {
         @frames();
    }
    @keyframes @name {
         @frames();
    }
}




.fnScale (@factor) {
    -webkit-transform: scale(@factor);
    -moz-transform: scale(@factor);
    -ms-transform: scale(@factor);
    -o-transform: scale(@factor);
    transform: scale(@factor);
}

.FnRotate (@deg) {
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    -ms-transform: rotate(@deg);
    -o-transform: rotate(@deg);
    transform: rotate(@deg);
}

.fnSkew (@deg, @deg2) {
    -webkit-transform: skew(@deg, @deg2);
    -moz-transform: skew(@deg, @deg2);
    -ms-transform: skew(@deg, @deg2);
    -o-transform: skew(@deg, @deg2);
    transform: skew(@deg, @deg2);
}

.fnPerspective (@value:1000) {
    -webkit-perspective: @value;
    -moz-perspective: @value;
    -ms-perspective: @value;
    perspective: @value;
}

.fnTransformOrigin (@prop) {
    transform-origin: @prop;
    -ms-transform-origin: @prop;
    -webkit-transform-origin: @prop;
    -moz-transform-origin: @prop;
    -o-transform-origin: @prop;
}

.fnTextShadow (@param:0 1px 3px rgba(0, 0, 0, 0.25)) {
    text-shadow: @param;
}

.fnBoxShadow (@param) {
    -webkit-box-shadow: @param;
    -moz-box-shadow: @param;
    box-shadow: @param;
}


.fnGradient (@startColor:#eee, @endColor: white) {
    background-color: @startColor;
    background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
    background: -webkit-linear-gradient(top, @startColor, @endColor);
    background: -moz-linear-gradient(top, @startColor, @endColor);
    background: -ms-linear-gradient(top, @startColor, @endColor);
    background: -o-linear-gradient(top, @startColor, @endColor);
}

.fnHorizontalGradient (@startColor:#eee, @endColor: white) {
    background-color: @startColor;
    background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
    background-image: -webkit-linear-gradient(left, @startColor, @endColor);
    background-image: -moz-linear-gradient(left, @startColor, @endColor);
    background-image: -ms-linear-gradient(left, @startColor, @endColor);
    background-image: -o-linear-gradient(left, @startColor, @endColor);
    background-image: linear-gradient(left, @startColor, @endColor);
}

.hide { display: none; }

.translate3d (@x, @y: 0, @z: 0) {
  -webkit-transform:       translate3d(@x, @y, @z);
  -moz-transform:    translate3d(@x, @y, @z);
  -ms-transform:     translate3d(@x, @y, @z);
  -o-transform:      translate3d(@x, @y, @z);
  transform:       translate3d(@x, @y, @z);
}
.transition (@transition) {
  -webkit-transition: @transition;
  -moz-transition:    @transition;
  -ms-transition:     @transition;
  -o-transition:      @transition;
  transition:        @transition;
}
.transform (@transform) {
  -webkit-transform: @transform;
  -moz-transform:    @transform;
  -ms-transform:     @transform;
  -o-transform:      @transform;
  transform:        @transform;
}



.keyframes(@name, @frames) {
    @-webkit-keyframes @name { @frames(); }
    @-moz-keyframes @name { @frames(); }
    @-ms-keyframes @name { @frames(); }
    @-o-keyframes @name { @frames(); }
    @keyframes @name { @frames(); }
}


.keyframes(line,{
  from{.translate3d(0,0,0)}
  to{.translate3d(0,110px,0)}
});



.animation(@arg){
  -moz-animation:@arg;
  -webkit-animation:@arg;
  -o-animation:@arg;
  -ms-animation:@arg;
  animation:@arg;
}

.opacity(@arg){
   -webkit-opacity: @arg;
  -moz-opacity: @arg;
  opacity: @arg;
  /* filter: alpha(opacity=@arg*100); */
}